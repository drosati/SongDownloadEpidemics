\documentclass[12pt]{article}

\textheight 9in 
\textwidth 6.5in
\topmargin -0.5in
\oddsidemargin 0in
\evensidemargin 0in
%\hoffset=-0.5in
\voffset=-0.25in

\usepackage{scrtime}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{graphics,graphicx}
\usepackage{enumerate}
\usepackage{color}
\usepackage{hyperref}
\usepackage[english]{babel}
\usepackage{tikz}

\title{Relative Fit Scatter Plot for GB}
\author{Dora Rosati}
\date{\today\ @ \thistime}

\begin{document}

\maketitle

\tableofcontents

\newpage

\section{Description}

This document is used to create a scatter plot showing relative fit
for the SIR model vs. relative fit for a cubic spline for songs in GB.

\section{Load Relevant Packages}

<<loadtikz,cache=FALSE>>=
library("tikzDevice")
@ 

<<loadpackages,cache=FALSE>>=

library("plyr")
library("dplyr")
library("RColorBrewer")

@ 

\section{Set a Few Parameters}

<<setparms,cache=FALSE>>=

## set minimum R0 to for excluding songs
source("minR0calcGB.R") # this will end up creating a parameter min.R0,
# which is the lowest possible R0

## set various parameter limits by sourcing a file with settings
## can reference a different file for (example) users with 5-5000 downloads
source("ParameterSettings.R")

## specify the path to the file that contains list of songs to be excluded
## note that this file contains song titles only -- load it now
songstoexcludefile <- "ExcludedSongsGB.tsv"
songstoexcludedf <- read.delim(songstoexcludefile,quote="",header=FALSE)
names(songstoexcludedf) <- "title"

## load axis function
source("newaxis.R")

@ 

\section{Load and Manipulate Data}

<<datamanipulation,cache=FALSE>>=
## load data and pull out relevant information
SIR.songs <- read.delim("songlistparamsGB.tsv",quote="")
spline.songs <- read.delim("songlistsplineparamsGB.tsv",quote="")
song.fits.df <- data.frame(SIR.songs[1:4],SIR.songs$R0,SIR.songs$rel.fit.goodness,spline.songs$rel.fit.goodness) %>%
  setNames(c(names(SIR.songs)[1:4],"R0","SIR.fit","spline.fit"))
song.fits.df <- subset(song.fits.df,!is.element(title,songstoexcludedf$title)) # removing holiday songs since they are not a fair test of the SIR model

## subset into two data frames -- good and bad SIR fits
song.fits.good.df <- subset(song.fits.df,!is.element(title,songstoexcludedf$title))
song.fits.good.df <- subset(song.fits.good.df,R0>=min.R0 & SIR.fit<max.rel.fit)
#song.fits.bad.df <- subset(song.fits.df,R0<min.R0|SIR.fit>=max.rel.fit|is.element(title,songstoexcludedf$title))
song.fits.bad.df <- subset(song.fits.df,R0<min.R0|SIR.fit>=max.rel.fit) # Changed this to not include holiday songs because we removed them from the initial sample

## try to generate desired colours...
col.vec <- brewer.pal(10,"Paired")[c(5,10)]

@ 

\section{Create Scatter Plot}

<<fitscatter,cache=FALSE,dev="tikz",fig.height=7>>=

par(mar=c(5.1,5.1,4.1,2.1))
## plot the fit measures for bad fit songs first because they'll have the most extreme values
with(song.fits.bad.df,plot(spline.fit,SIR.fit,pch=1
                           ,col=col.vec[1]
                           #,ylim=c(0,600),xlim=c(0,50)
                           ,log="xy"
                           ,xlab="Fit Measure for Spline"
                           #,ylab="Fit Measure for SIR"
                           ,ylab=""
                           ,yaxt="n"
                           ,las=1,cex.lab=1.5,cex.axis=1.5,ps=1.5,cex=1.5))
with(song.fits.good.df,points(spline.fit,SIR.fit
                              #,pch=4
                              ,pch=20
                              ,col=col.vec[2]
                              ))
lines(seq(0.001,150.001,1),seq(0.001,150.001,1))
mtext("Fit Measure for SIR",side=2,line=4,cex=1.5)
mtext("Songs",side=3,line=1,cex=2)
#eaxis(2,at.small=FALSE,lab.type="latex",cex.axis=1.5)
axis(2,at=c(0.5,1,5,10,50,100,500,1000),labels=c("0.5","1","5","10","50","100","500","1000"),las=1,cex.axis=1.5)
## add legend and y=x text
text(45,95,"$y = x$",cex=1.5)
legend("topright",c("Excluded SIR Fits","Included SIR Fits")
       #,fill=col.vec
       #,pch=c(1,4)
       ,pch=c(1,20)
       ,col=col.vec,cex=1.3
       ,bg="white"
       )

@ 

\section{Some Other Stats}

<<otherthings,cache=FALSE>>=
## determine number of songs above x=y line
song.fits.df$ratio <- song.fits.df$SIR.fit/song.fits.df$spline.fit
above.songs <- nrow(subset(song.fits.df,ratio>1))
print(above.songs)

## also determine number of these that were good fits
song.fits.good.df$ratio <- song.fits.good.df$SIR.fit/song.fits.good.df$spline.fit
above.songs.good <- nrow(subset(song.fits.good.df,ratio>1))
print(above.songs.good)

## determine how many songs are outside the plotting region
## songs either have spline>50, SIR>600 or both
out.of.plot.df <- subset(song.fits.df,spline.fit>10|SIR.fit>100)
n.out.of.plot <- nrow(out.of.plot.df)
print(n.out.of.plot)


@ 












\end{document}
